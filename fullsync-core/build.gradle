
apply plugin: 'java'

dependencies {
	compile project(':fullsync-logger')
	compile project(':fullsync-utils')
	compile "commons-cli:commons-cli:${project.ext.commonsCliVersion}"
	compile "commons-net:commons-net:${project.ext.commonsNetVersion}"
	compile("org.apache.commons:commons-vfs2:${project.ext.commonsVfsVersion}") {
		exclude group: "commons-logging"
		exclude group: "org.apache.maven.scm"
	}
	compile "org.samba.jcifs:jcifs:${project.ext.sambaJcifsVersion}"
	compile "com.jcraft:jsch:${project.ext.jcraftJschVersion}"
	compile "org.slf4j:jcl-over-slf4j:${project.ext.slf4jVersion}"
	compile "com.google.inject:guice:${project.ext.guiceVersion}"
	compile "com.google.inject.extensions:guice-assistedinject:${project.ext.guiceVersion}"
	compile files("lib/commons-vfs2-sandbox.jar")
	testImplementation "org.junit.jupiter:junit-jupiter-api:${project.ext.junitVersion}"
	testImplementation "org.hamcrest:hamcrest-core:${project.ext.hamcrestVersion}"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${project.ext.junitVersion}"
}

test {
	useJUnitPlatform {
		includeEngines 'junit-jupiter'
	}
}

jar {
	manifest {
		attributes 'Main-Class': 'net.sourceforge.fullsync.cli.Main'
		def resolvedRuntime = configurations.runtime.resolvedConfiguration
		def jarFiles = resolvedRuntime.resolvedArtifacts.collect { a ->
			rootProject.mapArtifactToFilename a
		}
		(resolvedRuntime.files - resolvedRuntime.resolvedArtifacts*.file).collect { f ->
			jarFiles.add f.name
		}
		attributes 'Class-Path': jarFiles.join(' ')
	}
}
